AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates a build, test and deployment pipeline."

Parameters:

  GitHubToken:
    Type: String
    NoEcho: true
    Description: A Github OAuth Token with public_repo or repo scope.

  GitHubUser:
    Type: String
    Description: Organisation or Username that the repository belongs to.

  Repo:
    Type: String
    Description: The name of the repository.

  Branch:
    Type: String
    Default: master
    Description: Branch to use from the repository.

  Project:
    Type: String
    Description: The name this project will be identified as inside AWS.


Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Options"
        Parameters:
          - Project
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - Repo
          - Branch
    ParameterLabels:
      GitHubToken:
        default: "GitHub Personal Access Token"
      GitHubUser:
        default: "Username or Organisation Name"
      Repo:
        default: "Repository Name"
      Branch:
        default: "Branch on Repository"
      Project:
        default: "A unique short identifier"

Resources:

  PipelineArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Ref: Project
      RestartExecutionOnUpdate: false
      ArtifactStore:
        Location:
          Ref: PipelineArtifactStore
        Type: S3
      RoleArn:
        Fn::GetAtt: [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref GitHubToken
        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName:
                  Ref: Build
        - Name: Deploy
          Actions:
            - Name: Create
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                  Ref: Project
                ChangeSetName:
                  Ref: Project
                TemplatePath: BuildOutput::template.yml
                ParameterOverrides: |
                  {
                    "RevisionId": { "Fn::GetParam": ["BuildOutput", "build.json", "CODEBUILD_RESOLVED_SOURCE_VERSION"] }
                  }
            - Name: Deploy
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              OutputArtifacts:
                - Name: DeployOutput
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM
                ChangeSetName:
                  Ref: Project
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                  Ref: Project
                OutputFileName: Outputs.json
            # - Name: Assets
            #   RunOrder: 3
            #   ActionTypeId:
            #     Category: Invoke
            #     Owner: AWS
            #     Provider: Lambda
            #     Version: 1
            #   InputArtifacts:
            #     - Name: BuildOutput
            #     - Name: DeployOutput
            #   Configuration:
            #     FunctionName: #FunctionName
            #     UserParameters: |
            #       {
            #
            #       }
            - Name: Assets
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
                - Name: DeployOutput
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_IAM
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName: !Sub "${Project}-assets"
                ChangeSetName: !Sub "${Project}-assets"
                TemplatePath: BuildOutput::assets.yml
                ParameterOverrides: !Sub |
                  {
                    "BucketName": { "Fn::GetArtifactAtt": ["BuildOutput", "BucketName"]},
                    "ObjectKey": { "Fn::GetArtifactAtt": ["BuildOutput", "ObjectKey"]},
                    "AssetBucket": { "Fn::GetParam": ["DeployOutput", "Outputs.json", "AssetBucket"]},
                    "CloudformationRoleArn": "${CloudformationRole.Arn}",
                    "PipelineRoleArn": "${PipelineRole.Arn}",
                    "PipelineRole": "${PipelineRole}",
                    "PipelineArtifactStore": "${PipelineArtifactStore}",
                    "BuildRoleArn": "${BuildRole.Arn}",
                    "BuildRole": "${BuildRole}"
                  }

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Ref: Project
      TimeoutInMinutes: 5
      ServiceRole:
        Fn::GetAtt: [BuildRole, Arn]
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value:
              Ref: PipelineArtifactStore
          - Name: AWS_ACCOUNT_ID
            Value:
              Ref: AWS::AccountId
      Artifacts:
        Type: CODEPIPELINE

  BuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${Build}"
      RetentionInDays: 1

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'cloudformation:*'
                  - 'codebuild:*'
                  - 'codepipeline:*'
                  - 's3:*'
                  - 'iam:*'
                  - 'lambda:*'
                  - 'dynamodb:*'
                  - 'logs:*'
                  - 'sns:*'
                  - 'events:*'
                  - 'cognito-idp:*'
                  - 'apigateway:*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource:
                  - Fn::Sub: "arn:aws:s3:::${PipelineArtifactStore}"
                  - Fn::Sub: "arn:aws:s3:::${PipelineArtifactStore}/*"
              - Action:
                  - 'codebuild:*'
                Effect: Allow
                Resource:
                  - Fn::Sub: "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${Build}"
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                Effect: Allow
                Resource:
                  - Fn::Sub: "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:*/${Project}*/*"
                  - '*'
              - Action:
                  - 'iam:PassRole'
                Effect: Allow
                Resource:
                  - '*'

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildPackageAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 's3:*'
                  - 'cloudformation:*'
                Effect: Allow
                Resource: '*'

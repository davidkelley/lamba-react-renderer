AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: Isomorphic React Application

Parameters:

  RevisionId:
    Type: String

Resources:

  AssetBucket:
    Type: AWS::S3::Bucket

  AssetBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref AssetBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: "Allow"
            Resource:
              - !Sub "arn:${AWS::Partition}:::${AssetBucket}/*"
            Principal: "*"

  AssetCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - !Sub "${RenderGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${RevisionId}/index"
        HttpVersion: http2
        Comment: !Sub "RevisionId: ${RevisionId}"
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: 404-not-found.html
        Origins:
          - DomainName: !Sub "${AssetBucket}.s3.${AWS::URLSuffix}"
            Id: Assets
        DefaultCacheBehaviour:
          - TargetOriginId: Assets
            Compress: true
        CacheBehaviour:
          - Compress: true
            PathPattern: assets/*
            TargetOriginId: Assets
            AllowedMethods:
              - GET
            CachedMethods:
              - GET

  Render:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.Render
      Runtime: nodejs6.10
      CodeUri: ./out/server
      Timeout: 10

  RenderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Render}"
      RetentionInDays: 1

  RenderGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Ref: RevisionId
      StageName:
        Ref: RevisionId
      DefinitionUri: ./out/api.yml
      Variables:
        RenderFunction:
          Ref: Render
        ExecutionRoleName:
          Ref: RenderGatewayExecutionRole

  RenderGatewayExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole

  RenderGatewayExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: APIPermissions
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - lambda:*
            Resource:
              - Fn::GetAtt: [Render, Arn]
      Roles:
        - Ref: RenderGatewayExecutionRole

Outputs:

  AssetBucket:
    Description: Bucket name for application static assets
    Value:
      Ref: AssetBucket

  URL:
    Description: URL for the service
    Value: !Sub "https://${RenderGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${RevisionId}"
